---
- name: Create 3 Tier App Deployment Workflow Template 
  ansible.controller.workflow_job_template:
    name: "[ Demo ] 3 Tier App Deployment" 
    description: Deploy 3 tier application with database, api and front end 
    organization: Default 
    inventory: AWS 
    state: "present"
    controller_username: "admin"
    controller_password: "{{ admin_password }}"
    controller_host: "{{ controller_dns }}"
    validate_certs: true

- name: Create frontend provisioning node
  ansible.controller.workflow_job_template_node:
    identifier: front-end-instance
    workflow: "[ Demo ] 3 Tier App Deployment"
    unified_job_template: "1. Provision"
    organization: Default
    extra_data: 
      aws_profile: ''
      survey_group_name: app_frontend
      survey_short_desc: frontend
      survey_server_env: dev
      survey_server_os: windows
    state: "present"
    controller_username: "admin"
    controller_password: "{{ admin_password }}"
    controller_host: "{{ controller_dns }}"
    validate_certs: true

- name: Create backend provisioning node
  ansible.controller.workflow_job_template_node:
    identifier: backend-instance
    workflow: "[ Demo ] 3 Tier App Deployment"
    unified_job_template: "1. Provision"
    organization: Default
    extra_data: 
      aws_profile: ''
      survey_group_name: app_backend
      survey_short_desc: backend
      survey_server_env: dev
      survey_server_os: linux
    state: "present"
    controller_username: "admin"
    controller_password: "{{ admin_password }}"
    controller_host: "{{ controller_dns }}"
    validate_certs: true

- name: Create database provisioning node
  ansible.controller.workflow_job_template_node:
    identifier: database-instance
    workflow: "[ Demo ] 3 Tier App Deployment"
    unified_job_template: "1. Provision"
    organization: Default
    extra_data: 
      aws_profile: ''
      survey_group_name: app_database
      survey_short_desc: database
      survey_server_env: dev
      survey_server_os: linux
    state: "present"
    controller_username: "admin"
    controller_password: "{{ admin_password }}"
    controller_host: "{{ controller_dns }}"
    validate_certs: true

# - name: Run the provisioning step (required to setup workflow)
#   ansible.controller.workflow_launch:
#     workflow_template: "[ Demo ] 3 Tier App Deployment"
#     controller_username: "admin"
#     controller_password: "{{ admin_password }}"
#     controller_host: "https://ansible.{{ top_level_domain }}"
#     validate_certs: true
#     wait: yes 
#     timeout: 1500
  
- name: Create failure node to deprovision
  ansible.controller.workflow_job_template_node:
    identifier: failure-node
    workflow: "[ Demo ] 3 Tier App Deployment"
    unified_job_template: "2. Deprovision"
    organization: Default
    extra_data: 
      aws_profile: ''
      survey_short_desc:
        - backend
        - frontend
        - database
    state: "present"
    controller_username: "admin"
    controller_password: "{{ admin_password }}"
    controller_host: "{{ controller_dns }}"
    validate_certs: true

- name: Create Deploy Demo Frontend node 
  ansible.controller.workflow_job_template_node:
    identifier: frontend-deploy-node
    workflow: "[ Demo ] 3 Tier App Deployment"
    unified_job_template: "[ Windows ] Deploy GoAddr Frontend"
    organization: Default
    failure_nodes:
      - failure-node
    limit: tag_app_frontend
    state: "present"
    controller_username: "admin"
    controller_password: "{{ admin_password }}"
    controller_host: "{{ controller_dns }}"
    validate_certs: true

- name: Create Configure IIS node 
  ansible.controller.workflow_job_template_node:
    identifier: configure-iis-node
    workflow: "[ Demo ] 3 Tier App Deployment"
    unified_job_template: "[ Windows ] Configure IIS"
    organization: Default
    success_nodes:
      - frontend-deploy-node
    failure_nodes:
      - failure-node
    limit: tag_app_frontend
    state: "present"
    controller_username: "admin"
    controller_password: "{{ admin_password }}"
    controller_host: "{{ controller_dns }}"
    validate_certs: true

- name: Create Configure DNS client node 
  ansible.controller.workflow_job_template_node:
    identifier: configure-dns-node
    workflow: "[ Demo ] 3 Tier App Deployment"
    unified_job_template: "[ Windows ] Configure DNS client"
    organization: Default
    success_nodes:
      - configure-iis-node
    failure_nodes:
      - failure-node
    limit: tag_app_frontend
    state: "present"
    controller_username: "admin"
    controller_password: "{{ admin_password }}"
    controller_host: "{{ controller_dns }}"
    validate_certs: true

- name: Update frontend provisioning node
  ansible.controller.workflow_job_template_node:
    identifier: front-end-instance
    workflow: "[ Demo ] 3 Tier App Deployment"
    unified_job_template: "1. Provision"
    organization: Default
    extra_data: 
      aws_profile: ''
      survey_group_name: app_frontend
      survey_short_desc: frontend
      survey_server_env: dev
      survey_server_os: windows
    success_nodes:
      - configure-dns-node
    failure_nodes:
      - failure-node
    state: "present"
    controller_username: "admin"
    controller_password: "{{ admin_password }}"
    controller_host: "{{ controller_dns }}"
    validate_certs: true

- name: Create postgres node 
  ansible.controller.workflow_job_template_node:
    identifier: postgres-node
    workflow: "[ Demo ] 3 Tier App Deployment"
    unified_job_template: "[ Linux ] Galaxy Role: Setup Postgresql"
    organization: Default
    failure_nodes:
      - failure-node
    limit: tag_app_database
    state: "present"
    controller_username: "admin"
    controller_password: "{{ admin_password }}"
    controller_host: "{{ controller_dns }}"
    validate_certs: true

- name: Create deploy goaddr node 
  ansible.controller.workflow_job_template_node:
    identifier: goaddr-node
    workflow: "[ Demo ] 3 Tier App Deployment"
    unified_job_template: "[ Linux ] Deploy GoAddr API"
    organization: Default
    failure_nodes:
      - failure-node
    limit: tag_app_backend
    state: "present"
    controller_username: "admin"
    controller_password: "{{ admin_password }}"
    controller_host: "{{ controller_dns }}"
    validate_certs: true

- name: Create timesync node 
  ansible.controller.workflow_job_template_node:
    identifier: timesync-node
    workflow: "[ Demo ] 3 Tier App Deployment"
    unified_job_template: "[ Linux ] RHEL System Role timesync"
    organization: Default
    success_nodes:
      - goaddr-node
      - postgres-node
    failure_nodes:
      - failure-node
    limit: tag_app_backend,tag_app_database
    state: "present"
    controller_username: "admin"
    controller_password: "{{ admin_password }}"
    controller_host: "{{ controller_dns }}"
    validate_certs: true

- name: Create crypto node 
  ansible.controller.workflow_job_template_node:
    identifier: crypto-node
    workflow: "[ Demo ] 3 Tier App Deployment"
    unified_job_template: "[ Linux ] RHEL System Role crypto policy"
    organization: Default
    success_nodes:
      - timesync-node
    failure_nodes:
      - failure-node
    limit: tag_app_backend,tag_app_database
    state: "present"
    controller_username: "admin"
    controller_password: "{{ admin_password }}"
    controller_host: "{{ controller_dns }}"
    validate_certs: true

- name: Update backend provisioning node
  ansible.controller.workflow_job_template_node:
    identifier: backend-instance
    workflow: "[ Demo ] 3 Tier App Deployment"
    unified_job_template: "1. Provision"
    organization: Default
    extra_data: 
      aws_profile: ''
      survey_group_name: app_backend
      survey_short_desc: backend
      survey_server_env: dev
      survey_server_os: linux
    success_nodes:
      - crypto-node
    failure_nodes:
      - failure-node
    state: "present"
    controller_username: "admin"
    controller_password: "{{ admin_password }}"
    controller_host: "{{ controller_dns }}"
    validate_certs: true

- name: Update database provisioning node
  ansible.controller.workflow_job_template_node:
    identifier: database-instance
    workflow: "[ Demo ] 3 Tier App Deployment"
    unified_job_template: "1. Provision"
    organization: Default
    extra_data: 
      aws_profile: ''
      survey_group_name: app_database
      survey_short_desc: database
      survey_server_env: dev
      survey_server_os: linux
    success_nodes:
      - crypto-node
    failure_nodes:
      - failure-node
    state: "present"
    controller_username: "admin"
    controller_password: "{{ admin_password }}"
    controller_host: "{{ controller_dns }}"
    validate_certs: true