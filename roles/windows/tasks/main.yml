---
# - name: Create tower organization for Windows
#   ansible.controller.organization:
#     name: Windows
#     description: "Windows admins"
#     state: present
#     tower_username: "{{ lookup('env', 'TOWER_USERNAME') }}"
#     tower_password: "{{ lookup('env', 'TOWER_PASSWORD') }}"
#     tower_host: "{{ lookup('env', 'TOWER_HOST') }}"
#     tower_verify_ssl: true

# - name: Create a credential for Galaxy in the Windows Org
#   ansible.controller.credential:
#     name: Windows Galaxy 
#     description: Credential for Windows org to access Galaxy
#     organization: Default
#     credential_type: Ansible Galaxy/Automation Hub API Token
#     inputs:
#       url: https://galaxy.ansible.com/
#     state: present
#     tower_username: "{{ lookup('env', 'TOWER_USERNAME') }}"
#     tower_password: "{{ lookup('env', 'TOWER_PASSWORD') }}"
#     tower_host: "{{ lookup('env', 'TOWER_HOST') }}"
#     tower_verify_ssl: true

- name: Setup Windows project 
  ansible.controller.project:
    name: Windows 
    state: present
    wait: yes
    organization: Default 
    tower_username: "{{ lookup('env', 'TOWER_USERNAME') }}"
    tower_password: "{{ lookup('env', 'TOWER_PASSWORD') }}"
    tower_host: "{{ lookup('env', 'TOWER_HOST') }}"
    tower_verify_ssl: true
    scm_type: git 
    scm_branch: "{{ windows_git_branch }}"
    scm_url: https://github.com/corumj/ansible-windows-demo.git
    scm_update_on_launch: yes 

- name: Setup Windows - Initialize job template
  ansible.controller.job_template:
    name: "Windows - 1. Initialize Demo"
    job_type: "run"
    inventory: AWS
    project: Windows
    playbook: "initialize.yml"
    organization: Default 
    credentials: 
      - "Controller Credential"
      - "AWS"
    survey_enabled: yes 
    survey_spec: "{{ lookup('file', 'windows.json') }}"
    state: "present"
    tower_username: "{{ lookup('env', 'TOWER_USERNAME') }}"
    tower_password: "{{ lookup('env', 'TOWER_PASSWORD') }}"
    tower_host: "{{ lookup('env', 'TOWER_HOST') }}"
    tower_verify_ssl: true

- name: Create Windows - 2. Setup AD Controller template
  ansible.controller.job_template:
    name: "Windows - 2. Setup AD Controller template (auto runs after init)"
    job_type: "run"
    inventory: AWS
    project: Windows
    playbook: "ad-controller-setup.yml"
    organization: Default 
    limit: tag_ad_server
    ask_variables_on_launch: yes
    credentials: 
      - "Controller Credential"
      - "AWS"
      - "AWS Windows"
    # survey_enabled: yes 
    # survey_spec: "{{ lookup('file', 'windows.json') }}"
    state: "present"
    tower_username: "{{ lookup('env', 'TOWER_USERNAME') }}"
    tower_password: "{{ lookup('env', 'TOWER_PASSWORD') }}"
    tower_host: "{{ lookup('env', 'TOWER_HOST') }}"
    tower_verify_ssl: true

- name: Create tower team
  ansible.controller.team:
    name: Windows
    description: Windows administrators
    organization: Default
    state: present
    tower_username: "{{ lookup('env', 'TOWER_USERNAME') }}"
    tower_password: "{{ lookup('env', 'TOWER_PASSWORD') }}"
    tower_host: "{{ lookup('env', 'TOWER_HOST') }}"
    tower_verify_ssl: true

- name: Add Windows user
  ansible.controller.user:
    username: windows
    password: "{{ lookup('env', 'TOWER_PASSWORD') }}"
    email: Windows@example.local
    first_name: Windows
    last_name: User
    state: present
    tower_username: "{{ lookup('env', 'TOWER_USERNAME') }}"
    tower_password: "{{ lookup('env', 'TOWER_PASSWORD') }}"
    tower_host: "{{ lookup('env', 'TOWER_HOST') }}"
    tower_verify_ssl: true

- name: promote Windows team to Windows project admin
  ansible.controller.role:
    team: Windows
    organization: Default
    role: project_admin
    state: present

- name: Add Windows user to team 
  ansible.controller.role:
    user: windows 
    target_team: Windows
    role: member 
    state: present

- name: Add team permissions to init playbook
  ansible.controller.role:
    team: Windows
    job_template: Windows - 1. Initialize Demo
    role: admin 
    state: present