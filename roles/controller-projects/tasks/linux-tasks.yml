---
- name: Create Linux Tasks Project
  ansible.controller.project:
    name: Linux Tasks 
    state: present
    wait: yes
    organization: Default 
    controller_username: "admin"
    controller_password: "{{ admin_password }}"
    controller_host: "{{ controller_dns }}"
    validate_certs: true
    scm_type: git 
    scm_url: https://github.com/corumj/ansible-linux-tasks
    scm_branch: platform
    scm_update_on_launch: yes 

- name: Create Linux - RHEL System Role Crypto Policy template
  ansible.controller.job_template:
    name: "[ Linux ] RHEL System Role crypto policy"
    job_type: run 
    organization: Default 
    inventory: AWS 
    project: Linux Tasks 
    playbook: crypto.yml 
    credentials:
      - AWS Linux 
    state: present 
    ask_limit_on_launch: yes 
    controller_username: "admin"
    controller_password: "{{ admin_password }}"
    controller_host: "{{ controller_dns }}"
    use_fact_cache: yes 

- name: Create Linux - RHEL System Role timesync template 
  ansible.controller.job_template:
    name: "[ Linux ] RHEL System Role timesync"
    job_type: run 
    organization: Default 
    inventory: AWS 
    project: Linux Tasks 
    playbook: timesync.yml 
    credentials:
      - AWS Linux 
    state: present 
    ask_limit_on_launch: yes 
    controller_username: "admin"
    controller_password: "{{ admin_password }}"
    controller_host: "{{ controller_dns }}"
    use_fact_cache: yes 

- name: Create Linux - Galaxy Role Setup Postgresql template 
  ansible.controller.job_template:
    name: "[ Linux ] Galaxy Role: Setup Postgresql"
    job_type: run 
    organization: Default 
    inventory: AWS 
    project: Linux Tasks 
    playbook: setup_postgres.yml 
    credentials:
      - AWS Linux 
    state: present 
    ask_limit_on_launch: yes 
    controller_username: "admin"
    controller_password: "{{ admin_password }}"
    controller_host: "{{ controller_dns }}"
    use_fact_cache: yes 

- name: Create Linux - Deploy GoAddr API template 
  ansible.controller.job_template:
    name: "[ Linux ] Deploy GoAddr API"
    job_type: run 
    organization: Default 
    inventory: AWS 
    project: Linux Tasks 
    playbook: deploy_goaddr_api.yml 
    credentials:
      - AWS Linux 
    state: present 
    ask_limit_on_launch: yes
    controller_username: "admin"
    controller_password: "{{ admin_password }}"
    controller_host: "{{ controller_dns }}"
    use_fact_cache: yes 