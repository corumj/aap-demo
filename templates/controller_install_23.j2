[automationcontroller]
{{ controller_dns }} ansible_user=ec2-user

[automationcontroller:vars]
peers=execution_nodes
node_type=control

[execution_nodes]
{{ hostvars[groups['demo_execution'][0]]['public_dns_name'] }} ansible_user=ec2-user

[execution_nodes:vars]
node_type=execution 
node_state=active 
listener_protocol=tcp
ansible_user=ec2-user

[automationhub]
{{ hub_dns }} ansible_user=ec2-user

[database]

[all:vars]
admin_password='{{ admin_password }}'
ansible_user='ec2-user' 
ansible_ssh_private_key_file='/home/ec2-user/.ssh/controller_id_rsa' 

pg_host=''
pg_port=''

pg_database='awx'
pg_username='awx'
pg_password='{{ admin_password }}'
pg_sslmode='prefer'  # set to 'verify-full' for client-side enforced SSL

gpgcheck='{{ gpgcheck | default(1)}}'
aw_repo_url='{{ aw_repo_url | default("https://releases.ansible.com/ansible-tower/") }}'
ignore_preflight_errors = True

# Execution Environment Configuration
# Credentials for container registry to pull execution environment images from,
# registry_username and registry_password are required for registry.redhat.io
registry_url='registry.redhat.io'
registry_username='{{ redhat_username }}'
registry_password='{{ redhat_password }}'

# Receptor Configuration
#
receptor_listener_port=27199

# Automation Hub Configuration
#

automationhub_admin_password='{{ admin_password }}'

automationhub_pg_host='{{ hostvars[groups['demo_controller'][0]]['private_dns_name'] }}'
automationhub_pg_port=5432

automationhub_pg_database='automationhub'
automationhub_pg_username='automationhub'
automationhub_pg_password='{{ admin_password }}'
automationhub_pg_sslmode='prefer'

automationhub_main_url = 'https://{{ hub_dns }}'

insights_username='{{ redhat_username }}'
insights_password='{{ redhat_password }}'

# Certificate and key to install in nginx for the web UI and API
web_server_ssl_cert=/home/ec2-user/aap/generated_files/{{ controller_dns }}_chain
web_server_ssl_key=/home/ec2-user/aap/generated_files/cert_key

# Certificate and key to install in Automation Hub node
automationhub_ssl_cert=/home/ec2-user/aap/generated_files/{{ hub_dns }}_chain
automationhub_ssl_key=/home/ec2-user/aap/generated_files/cert_key