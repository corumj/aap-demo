---
- hosts: localhost
  connection: local
  gather_facts: false
  vars:
    controller_configuration_projects_async_retries: 60
    controller_configuration_projects_async_delay: 2
    controller_username: "{{ vault_controller_username | default(lookup('env', 'CONTROLLER_USERNAME')) }}"
    controller_password: "{{ vault_controller_password | default(lookup('env', 'CONTROLLER_PASSWORD')) }}"
    controller_hostname: "{{ vault_controller_hostname | default(lookup('env', 'CONTROLLER_HOST')) }}"
    controller_validate_certs: "{{ vault_controller_validate_certs | default(lookup('env', 'CONTROLLER_VERIFY_SSL')) }}"
    dir_orgs_vars: "{{ playbook_dir }}/generated_files"

    filetree_controller_settings: "{{ playbook_dir }}/generated_files"
    filetree_controller_organizations: "{{ playbook_dir }}/generated_files"
    filetree_controller_labels: "{{ playbook_dir }}/generated_files"
    filetree_controller_user_accounts: "{{ playbook_dir }}/generated_files"
    filetree_controller_teams: "{{ playbook_dir }}/generated_files"
    filetree_controller_credential_types: "{{ playbook_dir }}/generated_files"
    filetree_controller_credentials: "{{ playbook_dir }}/generated_files"
      # Remove the build in ones for Ansible Galaxy and the Registry cred - under NORG
    filetree_controller_credential_input_sources: "{{ playbook_dir }}/generated_files"
    filetree_controller_notifications: "{{ playbook_dir }}/generated_files"
    filetree_controller_projects: "{{ playbook_dir }}/generated_files"
    filetree_controller_execution_environments: "{{ playbook_dir }}/generated_files"
    filetree_controller_applications: "{{ playbook_dir }}/generated_files"
    filetree_controller_inventories: "{{ playbook_dir }}/generated_files"
    filetree_controller_inventory_sources: "{{ playbook_dir }}/generated_files"
    filetree_controller_instance_groups: "{{ playbook_dir }}/generated_files"
    #filetree_controller_hosts: "{{ playbook_dir }}/generated_files"
    filetree_controller_groups: "{{ playbook_dir }}/generated_files"
    filetree_controller_templates: "{{ playbook_dir }}/generated_files"
    filetree_controller_workflow_job_templates: "{{ playbook_dir }}/generated_files"
    filetree_controller_schedules: "{{ playbook_dir }}/generated_files"
    filetree_controller_roles: "{{ playbook_dir }}/generated_files"


  pre_tasks:
    - name: "Setup authentication (block)"
      no_log: "{{ controller_configuration_filetree_read_secure_logging | default('false') }}"
      when: controller_oauthtoken is not defined
      tags:
        - always
      block:
        - name: "Get the Authentication Token for the future requests"
          ansible.builtin.uri:
            url: "https://{{ controller_hostname }}/api/v2/tokens/"
            user: "{{ controller_username }}"
            password: "{{ controller_password }}"
            method: POST
            force_basic_auth: true
            validate_certs: "{{ controller_validate_certs }}"
            status_code: 201
          register: authtoken_res

        - name: "Set the oauth token to be used since now"
          ansible.builtin.set_fact:
            controller_oauthtoken: "{{ authtoken_res.json.token }}"
            controller_oauthtoken_url: "{{ authtoken_res.json.url }}"
  roles:
    - role: infra.controller_configuration.filetree_read

    - role: infra.controller_configuration.dispatch

  post_tasks:
    - name: "Delete the Authentication Token used"
      ansible.builtin.uri:
        url: "https://{{ controller_hostname }}{{ controller_oauthtoken_url }}"
        user: "{{ controller_username }}"
        password: "{{ controller_password }}"
        method: DELETE
        force_basic_auth: true
        validate_certs: "{{ controller_validate_certs }}"
        status_code: 204
      when: controller_oauthtoken_url is defined